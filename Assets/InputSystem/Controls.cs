//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/InputSystem/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""f3c565af-6646-46e8-90bf-a547cba0302d"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""79bd5af9-9ded-49ea-8219-4099f9bb08db"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""FreeLook"",
                    ""type"": ""Value"",
                    ""id"": ""8b678be8-6e23-4efd-b82c-449f3050146e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RegularAttack"",
                    ""type"": ""Button"",
                    ""id"": ""a517cd9a-4251-40a7-8c5a-87bcf9a4c65e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TransformAttack"",
                    ""type"": ""Button"",
                    ""id"": ""6e4d0840-ae3b-4ea5-ac30-d66063cdac88"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dodge"",
                    ""type"": ""Button"",
                    ""id"": ""475df96c-6803-449a-b640-c7b0f9206856"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TimeStop"",
                    ""type"": ""Button"",
                    ""id"": ""f15fc0ac-76bf-4c58-9b64-89df36ac7b3b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HealthRecover"",
                    ""type"": ""Button"",
                    ""id"": ""0082b298-131b-4921-a43a-6c8e31cdcfc3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Target"",
                    ""type"": ""Button"",
                    ""id"": ""c2b72359-c44f-4496-814d-159e367a08bd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TargetSelection"",
                    ""type"": ""Value"",
                    ""id"": ""b6f061a6-503d-4254-a85b-1b8d6e4c3356"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SkillActionPanel"",
                    ""type"": ""Button"",
                    ""id"": ""7c48b1e1-ec76-4e3f-95e8-0053cad57f29"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkillAction"",
                    ""type"": ""Value"",
                    ""id"": ""4d64437b-34e6-4cba-9192-adc06d08e826"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CallMenu"",
                    ""type"": ""Button"",
                    ""id"": ""b213406f-c327-45e6-b8af-daaeaed5da05"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Execution"",
                    ""type"": ""Button"",
                    ""id"": ""d4f4110c-0246-405e-9235-5929416304ae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Check"",
                    ""type"": ""Button"",
                    ""id"": ""0722ca99-9914-48df-be95-53875a1c70ac"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9eef1f10-3616-464f-850d-dfe72541e900"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse-Keyboard"",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad2ac7ee-c0d8-40f3-b7ed-a1c80f45b42b"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f672d62a-d26f-41d9-be7d-6ceeb8ab3db9"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""f4a633db-1fdc-465a-8c30-7079539de21e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e95c41d0-b4bb-439a-a118-98405fb7c9a5"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5408cccf-a237-44d4-bfa8-4cf1d5027b0c"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5ff5fd7c-1ceb-46f2-bb54-200aad4b8b19"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ca111128-82a3-45bc-877d-caa76abe5e91"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f19c4c7e-f592-4a95-bb84-5d4f147c347f"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""FreeLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2774e021-df7f-4889-92bb-9a0339768080"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FreeLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a70d761-ae5a-4b23-851b-d197159e0ceb"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse-Keyboard"",
                    ""action"": ""RegularAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6c2bd2f5-fff4-4eb9-a592-f157b6b3f59b"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""RegularAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""038bd31e-937a-4100-9b03-25e968fbf531"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse-Keyboard"",
                    ""action"": ""TransformAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0e5bbcff-8bd2-4c97-9067-2b46b1bee4e8"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""TransformAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be60130c-02f2-4ca0-a18c-aaea22f8922c"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse-Keyboard"",
                    ""action"": ""TimeStop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc74073b-560a-44f0-bad1-e4e9f477749b"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""TimeStop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""89d2bed9-66f0-41e2-8ee7-3eff5572f5ab"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse-Keyboard"",
                    ""action"": ""HealthRecover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8eac6b78-87df-44a4-ade2-f243f6b6e716"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse-Keyboard"",
                    ""action"": ""Target"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e2a2728-3525-4313-8bed-bde123f5ad26"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse-Keyboard"",
                    ""action"": ""Target"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a6c11b7-c730-4df8-92f7-da0e872f3e98"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Target"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""171c5626-2625-4f39-b8f9-c5e7c30f10e0"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse-Keyboard"",
                    ""action"": ""TargetSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a6b42c44-6526-4622-bda7-dd0397fb025b"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""TargetSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff84f471-b171-4eb1-8afc-6fbf7602d02f"",
                    ""path"": ""<Keyboard>/alt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse-Keyboard"",
                    ""action"": ""SkillActionPanel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""32d316c4-df40-465e-b92a-bd17124c3a26"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""SkillActionPanel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""KeyboardActions"",
                    ""id"": ""b4ce357f-2865-4dd0-af46-b44d264a4092"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillAction"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ac3e75c5-4426-4056-b313-89ce1d158feb"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse-Keyboard"",
                    ""action"": ""SkillAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e4239fe5-78f3-4528-b0d4-4fd0d3f2a715"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse-Keyboard"",
                    ""action"": ""SkillAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ac076c62-3d87-49c3-be07-68ccf25e68e7"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse-Keyboard"",
                    ""action"": ""SkillAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d2772942-8696-486a-a682-b7a0e43f4e3b"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse-Keyboard"",
                    ""action"": ""SkillAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""ControllerActions"",
                    ""id"": ""69f8f92e-180b-4596-a8d2-de89591c0beb"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillAction"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""feba916d-727d-4285-84d1-0ac7a843012c"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""SkillAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6e78f55f-2d0c-4ee8-8045-58c482b25e6e"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""SkillAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8061ba87-c848-425b-805e-daf9bb3921be"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""SkillAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ab8cac26-7c91-48a8-8e7e-a44c6cd75f33"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""SkillAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""433c5190-54c8-4bda-a1cd-78ad55d8e426"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse-Keyboard"",
                    ""action"": ""CallMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c0552e7f-66e7-46ea-af42-75459beef409"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""CallMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""004b8688-29d0-413e-908c-247f9a4d37fc"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3a3dfb17-aa27-4e02-b5c5-5b007a229237"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse-Keyboard"",
                    ""action"": ""Execution"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb63a711-0b9a-4ab8-9948-34063b97e0a4"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Execution"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8bb7ee07-5cc4-4bc2-9012-fbbd0f950514"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Check"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""fc069ac3-3906-428a-b86c-93e4b2f74b64"",
            ""actions"": [
                {
                    ""name"": ""UpSelection"",
                    ""type"": ""Button"",
                    ""id"": ""86870224-8c23-4281-ad83-6e88a750952c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DownSelection"",
                    ""type"": ""Button"",
                    ""id"": ""af749e1e-4e40-4b0a-aee0-c69df9fce9ca"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Confirm"",
                    ""type"": ""Button"",
                    ""id"": ""30820b5f-8f0b-4d5e-8294-be4d29a3defa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""2a2eea76-c66c-4430-9d73-7b52d7d0d1a0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftSelection"",
                    ""type"": ""Button"",
                    ""id"": ""ef90a7d4-1352-4324-aa2b-e650deb1d1b6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightSelection"",
                    ""type"": ""Button"",
                    ""id"": ""41119d82-df2a-43bc-9435-09c967ffb5f5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UICallMenu"",
                    ""type"": ""Button"",
                    ""id"": ""7ad67fcc-d1ae-4b37-909b-a7c9ceed7c8f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CancelCheck"",
                    ""type"": ""Button"",
                    ""id"": ""05960c09-2141-4a4d-98fe-eb123da63c86"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1b38d627-6a83-4f10-b324-f37369937047"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UpSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""83574ea6-d207-4774-9489-1c439e9c9799"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UpSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""24dc51d2-953d-47c8-8cca-fbf09fe35e74"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DownSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2097480-b5c5-41dc-8450-c33a7b2f6ecd"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DownSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b0e1bd89-9983-4262-8179-1b8c70b269bd"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4121e50a-e392-4257-9067-748e9bd55112"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e40ff824-7f84-4c66-a91f-517839e984f0"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b848b91d-1f9b-4e0c-ba09-cf7c8634d3f3"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c06c4e6-63f6-448d-b91d-64f781ef52c1"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9664e8e5-cdcb-4534-b357-ce250c57054f"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ce837018-0293-4080-b866-1d1b1f18964a"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse-Keyboard"",
                    ""action"": ""UICallMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aeb175ed-05d1-44dd-a722-39efeb8f2d44"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""UICallMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""92173457-de8c-40fa-aec2-a84e4a8e1e00"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CancelCheck"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""TitlePage"",
            ""id"": ""639213e4-028d-4634-b09b-5320eb6f05ec"",
            ""actions"": [
                {
                    ""name"": ""AnyKeyTitlePage"",
                    ""type"": ""Button"",
                    ""id"": ""e972f6fd-0bb8-41ec-ae0d-e3ba37313c44"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""fa2577e4-447b-491a-bed0-0e76ef561fb4"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""AnyKeyTitlePage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2582612d-6aca-4df8-8735-30418d3fe984"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""AnyKeyTitlePage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""21135982-38fc-46a2-b7d5-d3e137561f18"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""AnyKeyTitlePage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""706313fa-fa7c-4897-bedd-8430cdb2cb93"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""AnyKeyTitlePage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c4856637-3b47-4bf3-925a-8ac61723ad7a"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""AnyKeyTitlePage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f661fde-9043-433f-a3df-905f964bf6f6"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""AnyKeyTitlePage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eef585e0-6687-4343-ab2f-3063a2b548ac"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""AnyKeyTitlePage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9d07d2ee-57a9-4a19-98be-8a31976236ff"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""AnyKeyTitlePage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""007f0e2e-f155-482f-948f-d864fa016d6e"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""AnyKeyTitlePage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d378d2a3-a01a-46fd-84a5-e327fe27e8ea"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""AnyKeyTitlePage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5094f7fd-b903-46af-8f1c-fd49f9b9c612"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""AnyKeyTitlePage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5820cc4b-5aba-4173-99b8-9937fc114faf"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""AnyKeyTitlePage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ec7c86e5-0e4a-47ac-8000-c35bc3544371"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""AnyKeyTitlePage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e9f92340-1458-4386-be63-b5598dd732cd"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""AnyKeyTitlePage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38095e17-cd08-4c9b-9c86-a9732af09d41"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""AnyKeyTitlePage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""89831c16-d055-4b6d-b06c-c6b9063c8b2a"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""AnyKeyTitlePage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""AutoDrive"",
            ""id"": ""59297cdf-533b-4b22-b297-fb9f22c860b3"",
            ""actions"": [
                {
                    ""name"": ""Steer"",
                    ""type"": ""Value"",
                    ""id"": ""f529ae2b-9c76-4670-ad66-5a9c5b07c90f"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Accelerate"",
                    ""type"": ""Button"",
                    ""id"": ""feb3a467-f414-4442-829d-53f56b903227"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Brake"",
                    ""type"": ""Button"",
                    ""id"": ""b06940cc-b503-42da-91cb-a9cb786d9870"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HandBrake"",
                    ""type"": ""Button"",
                    ""id"": ""8968566f-0b3b-4955-98b7-b8183f7272a0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f6be5121-9256-4857-bcef-1849a57119b8"",
                    ""path"": ""<Gamepad>/leftStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""51eba295-72f0-438b-88aa-338c0ef1a671"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Steer"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Negative"",
                    ""id"": ""583aed9a-07a8-4ba6-acf1-efb642cd7852"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse-Keyboard"",
                    ""action"": ""Steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Positive"",
                    ""id"": ""4f847536-7965-4618-83f1-6c7099ef9e6e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse-Keyboard"",
                    ""action"": ""Steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""791d13e6-048a-4611-a788-56164df6d419"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Accelerate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f524ec3-e328-4775-91f7-0ad139b40b8e"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse-Keyboard"",
                    ""action"": ""Accelerate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1080a8dd-5449-4759-a770-957d5ca17242"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3dda0406-b1fe-4b8a-956a-ef57a18620f3"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse-Keyboard"",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""648e1677-f356-4efa-a961-266e0a15cc6b"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""HandBrake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4bc0a462-b79c-4045-b28e-4f6c347ade6c"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse-Keyboard"",
                    ""action"": ""HandBrake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Mouse-Keyboard"",
            ""bindingGroup"": ""Mouse-Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""GamePad"",
            ""bindingGroup"": ""GamePad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_FreeLook = m_Player.FindAction("FreeLook", throwIfNotFound: true);
        m_Player_RegularAttack = m_Player.FindAction("RegularAttack", throwIfNotFound: true);
        m_Player_TransformAttack = m_Player.FindAction("TransformAttack", throwIfNotFound: true);
        m_Player_Dodge = m_Player.FindAction("Dodge", throwIfNotFound: true);
        m_Player_TimeStop = m_Player.FindAction("TimeStop", throwIfNotFound: true);
        m_Player_HealthRecover = m_Player.FindAction("HealthRecover", throwIfNotFound: true);
        m_Player_Target = m_Player.FindAction("Target", throwIfNotFound: true);
        m_Player_TargetSelection = m_Player.FindAction("TargetSelection", throwIfNotFound: true);
        m_Player_SkillActionPanel = m_Player.FindAction("SkillActionPanel", throwIfNotFound: true);
        m_Player_SkillAction = m_Player.FindAction("SkillAction", throwIfNotFound: true);
        m_Player_CallMenu = m_Player.FindAction("CallMenu", throwIfNotFound: true);
        m_Player_Execution = m_Player.FindAction("Execution", throwIfNotFound: true);
        m_Player_Check = m_Player.FindAction("Check", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_UpSelection = m_UI.FindAction("UpSelection", throwIfNotFound: true);
        m_UI_DownSelection = m_UI.FindAction("DownSelection", throwIfNotFound: true);
        m_UI_Confirm = m_UI.FindAction("Confirm", throwIfNotFound: true);
        m_UI_Cancel = m_UI.FindAction("Cancel", throwIfNotFound: true);
        m_UI_LeftSelection = m_UI.FindAction("LeftSelection", throwIfNotFound: true);
        m_UI_RightSelection = m_UI.FindAction("RightSelection", throwIfNotFound: true);
        m_UI_UICallMenu = m_UI.FindAction("UICallMenu", throwIfNotFound: true);
        m_UI_CancelCheck = m_UI.FindAction("CancelCheck", throwIfNotFound: true);
        // TitlePage
        m_TitlePage = asset.FindActionMap("TitlePage", throwIfNotFound: true);
        m_TitlePage_AnyKeyTitlePage = m_TitlePage.FindAction("AnyKeyTitlePage", throwIfNotFound: true);
        // AutoDrive
        m_AutoDrive = asset.FindActionMap("AutoDrive", throwIfNotFound: true);
        m_AutoDrive_Steer = m_AutoDrive.FindAction("Steer", throwIfNotFound: true);
        m_AutoDrive_Accelerate = m_AutoDrive.FindAction("Accelerate", throwIfNotFound: true);
        m_AutoDrive_Brake = m_AutoDrive.FindAction("Brake", throwIfNotFound: true);
        m_AutoDrive_HandBrake = m_AutoDrive.FindAction("HandBrake", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_FreeLook;
    private readonly InputAction m_Player_RegularAttack;
    private readonly InputAction m_Player_TransformAttack;
    private readonly InputAction m_Player_Dodge;
    private readonly InputAction m_Player_TimeStop;
    private readonly InputAction m_Player_HealthRecover;
    private readonly InputAction m_Player_Target;
    private readonly InputAction m_Player_TargetSelection;
    private readonly InputAction m_Player_SkillActionPanel;
    private readonly InputAction m_Player_SkillAction;
    private readonly InputAction m_Player_CallMenu;
    private readonly InputAction m_Player_Execution;
    private readonly InputAction m_Player_Check;
    public struct PlayerActions
    {
        private @Controls m_Wrapper;
        public PlayerActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @FreeLook => m_Wrapper.m_Player_FreeLook;
        public InputAction @RegularAttack => m_Wrapper.m_Player_RegularAttack;
        public InputAction @TransformAttack => m_Wrapper.m_Player_TransformAttack;
        public InputAction @Dodge => m_Wrapper.m_Player_Dodge;
        public InputAction @TimeStop => m_Wrapper.m_Player_TimeStop;
        public InputAction @HealthRecover => m_Wrapper.m_Player_HealthRecover;
        public InputAction @Target => m_Wrapper.m_Player_Target;
        public InputAction @TargetSelection => m_Wrapper.m_Player_TargetSelection;
        public InputAction @SkillActionPanel => m_Wrapper.m_Player_SkillActionPanel;
        public InputAction @SkillAction => m_Wrapper.m_Player_SkillAction;
        public InputAction @CallMenu => m_Wrapper.m_Player_CallMenu;
        public InputAction @Execution => m_Wrapper.m_Player_Execution;
        public InputAction @Check => m_Wrapper.m_Player_Check;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @FreeLook.started += instance.OnFreeLook;
            @FreeLook.performed += instance.OnFreeLook;
            @FreeLook.canceled += instance.OnFreeLook;
            @RegularAttack.started += instance.OnRegularAttack;
            @RegularAttack.performed += instance.OnRegularAttack;
            @RegularAttack.canceled += instance.OnRegularAttack;
            @TransformAttack.started += instance.OnTransformAttack;
            @TransformAttack.performed += instance.OnTransformAttack;
            @TransformAttack.canceled += instance.OnTransformAttack;
            @Dodge.started += instance.OnDodge;
            @Dodge.performed += instance.OnDodge;
            @Dodge.canceled += instance.OnDodge;
            @TimeStop.started += instance.OnTimeStop;
            @TimeStop.performed += instance.OnTimeStop;
            @TimeStop.canceled += instance.OnTimeStop;
            @HealthRecover.started += instance.OnHealthRecover;
            @HealthRecover.performed += instance.OnHealthRecover;
            @HealthRecover.canceled += instance.OnHealthRecover;
            @Target.started += instance.OnTarget;
            @Target.performed += instance.OnTarget;
            @Target.canceled += instance.OnTarget;
            @TargetSelection.started += instance.OnTargetSelection;
            @TargetSelection.performed += instance.OnTargetSelection;
            @TargetSelection.canceled += instance.OnTargetSelection;
            @SkillActionPanel.started += instance.OnSkillActionPanel;
            @SkillActionPanel.performed += instance.OnSkillActionPanel;
            @SkillActionPanel.canceled += instance.OnSkillActionPanel;
            @SkillAction.started += instance.OnSkillAction;
            @SkillAction.performed += instance.OnSkillAction;
            @SkillAction.canceled += instance.OnSkillAction;
            @CallMenu.started += instance.OnCallMenu;
            @CallMenu.performed += instance.OnCallMenu;
            @CallMenu.canceled += instance.OnCallMenu;
            @Execution.started += instance.OnExecution;
            @Execution.performed += instance.OnExecution;
            @Execution.canceled += instance.OnExecution;
            @Check.started += instance.OnCheck;
            @Check.performed += instance.OnCheck;
            @Check.canceled += instance.OnCheck;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @FreeLook.started -= instance.OnFreeLook;
            @FreeLook.performed -= instance.OnFreeLook;
            @FreeLook.canceled -= instance.OnFreeLook;
            @RegularAttack.started -= instance.OnRegularAttack;
            @RegularAttack.performed -= instance.OnRegularAttack;
            @RegularAttack.canceled -= instance.OnRegularAttack;
            @TransformAttack.started -= instance.OnTransformAttack;
            @TransformAttack.performed -= instance.OnTransformAttack;
            @TransformAttack.canceled -= instance.OnTransformAttack;
            @Dodge.started -= instance.OnDodge;
            @Dodge.performed -= instance.OnDodge;
            @Dodge.canceled -= instance.OnDodge;
            @TimeStop.started -= instance.OnTimeStop;
            @TimeStop.performed -= instance.OnTimeStop;
            @TimeStop.canceled -= instance.OnTimeStop;
            @HealthRecover.started -= instance.OnHealthRecover;
            @HealthRecover.performed -= instance.OnHealthRecover;
            @HealthRecover.canceled -= instance.OnHealthRecover;
            @Target.started -= instance.OnTarget;
            @Target.performed -= instance.OnTarget;
            @Target.canceled -= instance.OnTarget;
            @TargetSelection.started -= instance.OnTargetSelection;
            @TargetSelection.performed -= instance.OnTargetSelection;
            @TargetSelection.canceled -= instance.OnTargetSelection;
            @SkillActionPanel.started -= instance.OnSkillActionPanel;
            @SkillActionPanel.performed -= instance.OnSkillActionPanel;
            @SkillActionPanel.canceled -= instance.OnSkillActionPanel;
            @SkillAction.started -= instance.OnSkillAction;
            @SkillAction.performed -= instance.OnSkillAction;
            @SkillAction.canceled -= instance.OnSkillAction;
            @CallMenu.started -= instance.OnCallMenu;
            @CallMenu.performed -= instance.OnCallMenu;
            @CallMenu.canceled -= instance.OnCallMenu;
            @Execution.started -= instance.OnExecution;
            @Execution.performed -= instance.OnExecution;
            @Execution.canceled -= instance.OnExecution;
            @Check.started -= instance.OnCheck;
            @Check.performed -= instance.OnCheck;
            @Check.canceled -= instance.OnCheck;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_UpSelection;
    private readonly InputAction m_UI_DownSelection;
    private readonly InputAction m_UI_Confirm;
    private readonly InputAction m_UI_Cancel;
    private readonly InputAction m_UI_LeftSelection;
    private readonly InputAction m_UI_RightSelection;
    private readonly InputAction m_UI_UICallMenu;
    private readonly InputAction m_UI_CancelCheck;
    public struct UIActions
    {
        private @Controls m_Wrapper;
        public UIActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @UpSelection => m_Wrapper.m_UI_UpSelection;
        public InputAction @DownSelection => m_Wrapper.m_UI_DownSelection;
        public InputAction @Confirm => m_Wrapper.m_UI_Confirm;
        public InputAction @Cancel => m_Wrapper.m_UI_Cancel;
        public InputAction @LeftSelection => m_Wrapper.m_UI_LeftSelection;
        public InputAction @RightSelection => m_Wrapper.m_UI_RightSelection;
        public InputAction @UICallMenu => m_Wrapper.m_UI_UICallMenu;
        public InputAction @CancelCheck => m_Wrapper.m_UI_CancelCheck;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @UpSelection.started += instance.OnUpSelection;
            @UpSelection.performed += instance.OnUpSelection;
            @UpSelection.canceled += instance.OnUpSelection;
            @DownSelection.started += instance.OnDownSelection;
            @DownSelection.performed += instance.OnDownSelection;
            @DownSelection.canceled += instance.OnDownSelection;
            @Confirm.started += instance.OnConfirm;
            @Confirm.performed += instance.OnConfirm;
            @Confirm.canceled += instance.OnConfirm;
            @Cancel.started += instance.OnCancel;
            @Cancel.performed += instance.OnCancel;
            @Cancel.canceled += instance.OnCancel;
            @LeftSelection.started += instance.OnLeftSelection;
            @LeftSelection.performed += instance.OnLeftSelection;
            @LeftSelection.canceled += instance.OnLeftSelection;
            @RightSelection.started += instance.OnRightSelection;
            @RightSelection.performed += instance.OnRightSelection;
            @RightSelection.canceled += instance.OnRightSelection;
            @UICallMenu.started += instance.OnUICallMenu;
            @UICallMenu.performed += instance.OnUICallMenu;
            @UICallMenu.canceled += instance.OnUICallMenu;
            @CancelCheck.started += instance.OnCancelCheck;
            @CancelCheck.performed += instance.OnCancelCheck;
            @CancelCheck.canceled += instance.OnCancelCheck;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @UpSelection.started -= instance.OnUpSelection;
            @UpSelection.performed -= instance.OnUpSelection;
            @UpSelection.canceled -= instance.OnUpSelection;
            @DownSelection.started -= instance.OnDownSelection;
            @DownSelection.performed -= instance.OnDownSelection;
            @DownSelection.canceled -= instance.OnDownSelection;
            @Confirm.started -= instance.OnConfirm;
            @Confirm.performed -= instance.OnConfirm;
            @Confirm.canceled -= instance.OnConfirm;
            @Cancel.started -= instance.OnCancel;
            @Cancel.performed -= instance.OnCancel;
            @Cancel.canceled -= instance.OnCancel;
            @LeftSelection.started -= instance.OnLeftSelection;
            @LeftSelection.performed -= instance.OnLeftSelection;
            @LeftSelection.canceled -= instance.OnLeftSelection;
            @RightSelection.started -= instance.OnRightSelection;
            @RightSelection.performed -= instance.OnRightSelection;
            @RightSelection.canceled -= instance.OnRightSelection;
            @UICallMenu.started -= instance.OnUICallMenu;
            @UICallMenu.performed -= instance.OnUICallMenu;
            @UICallMenu.canceled -= instance.OnUICallMenu;
            @CancelCheck.started -= instance.OnCancelCheck;
            @CancelCheck.performed -= instance.OnCancelCheck;
            @CancelCheck.canceled -= instance.OnCancelCheck;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);

    // TitlePage
    private readonly InputActionMap m_TitlePage;
    private List<ITitlePageActions> m_TitlePageActionsCallbackInterfaces = new List<ITitlePageActions>();
    private readonly InputAction m_TitlePage_AnyKeyTitlePage;
    public struct TitlePageActions
    {
        private @Controls m_Wrapper;
        public TitlePageActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @AnyKeyTitlePage => m_Wrapper.m_TitlePage_AnyKeyTitlePage;
        public InputActionMap Get() { return m_Wrapper.m_TitlePage; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TitlePageActions set) { return set.Get(); }
        public void AddCallbacks(ITitlePageActions instance)
        {
            if (instance == null || m_Wrapper.m_TitlePageActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_TitlePageActionsCallbackInterfaces.Add(instance);
            @AnyKeyTitlePage.started += instance.OnAnyKeyTitlePage;
            @AnyKeyTitlePage.performed += instance.OnAnyKeyTitlePage;
            @AnyKeyTitlePage.canceled += instance.OnAnyKeyTitlePage;
        }

        private void UnregisterCallbacks(ITitlePageActions instance)
        {
            @AnyKeyTitlePage.started -= instance.OnAnyKeyTitlePage;
            @AnyKeyTitlePage.performed -= instance.OnAnyKeyTitlePage;
            @AnyKeyTitlePage.canceled -= instance.OnAnyKeyTitlePage;
        }

        public void RemoveCallbacks(ITitlePageActions instance)
        {
            if (m_Wrapper.m_TitlePageActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ITitlePageActions instance)
        {
            foreach (var item in m_Wrapper.m_TitlePageActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_TitlePageActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public TitlePageActions @TitlePage => new TitlePageActions(this);

    // AutoDrive
    private readonly InputActionMap m_AutoDrive;
    private List<IAutoDriveActions> m_AutoDriveActionsCallbackInterfaces = new List<IAutoDriveActions>();
    private readonly InputAction m_AutoDrive_Steer;
    private readonly InputAction m_AutoDrive_Accelerate;
    private readonly InputAction m_AutoDrive_Brake;
    private readonly InputAction m_AutoDrive_HandBrake;
    public struct AutoDriveActions
    {
        private @Controls m_Wrapper;
        public AutoDriveActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Steer => m_Wrapper.m_AutoDrive_Steer;
        public InputAction @Accelerate => m_Wrapper.m_AutoDrive_Accelerate;
        public InputAction @Brake => m_Wrapper.m_AutoDrive_Brake;
        public InputAction @HandBrake => m_Wrapper.m_AutoDrive_HandBrake;
        public InputActionMap Get() { return m_Wrapper.m_AutoDrive; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(AutoDriveActions set) { return set.Get(); }
        public void AddCallbacks(IAutoDriveActions instance)
        {
            if (instance == null || m_Wrapper.m_AutoDriveActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_AutoDriveActionsCallbackInterfaces.Add(instance);
            @Steer.started += instance.OnSteer;
            @Steer.performed += instance.OnSteer;
            @Steer.canceled += instance.OnSteer;
            @Accelerate.started += instance.OnAccelerate;
            @Accelerate.performed += instance.OnAccelerate;
            @Accelerate.canceled += instance.OnAccelerate;
            @Brake.started += instance.OnBrake;
            @Brake.performed += instance.OnBrake;
            @Brake.canceled += instance.OnBrake;
            @HandBrake.started += instance.OnHandBrake;
            @HandBrake.performed += instance.OnHandBrake;
            @HandBrake.canceled += instance.OnHandBrake;
        }

        private void UnregisterCallbacks(IAutoDriveActions instance)
        {
            @Steer.started -= instance.OnSteer;
            @Steer.performed -= instance.OnSteer;
            @Steer.canceled -= instance.OnSteer;
            @Accelerate.started -= instance.OnAccelerate;
            @Accelerate.performed -= instance.OnAccelerate;
            @Accelerate.canceled -= instance.OnAccelerate;
            @Brake.started -= instance.OnBrake;
            @Brake.performed -= instance.OnBrake;
            @Brake.canceled -= instance.OnBrake;
            @HandBrake.started -= instance.OnHandBrake;
            @HandBrake.performed -= instance.OnHandBrake;
            @HandBrake.canceled -= instance.OnHandBrake;
        }

        public void RemoveCallbacks(IAutoDriveActions instance)
        {
            if (m_Wrapper.m_AutoDriveActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IAutoDriveActions instance)
        {
            foreach (var item in m_Wrapper.m_AutoDriveActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_AutoDriveActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public AutoDriveActions @AutoDrive => new AutoDriveActions(this);
    private int m_MouseKeyboardSchemeIndex = -1;
    public InputControlScheme MouseKeyboardScheme
    {
        get
        {
            if (m_MouseKeyboardSchemeIndex == -1) m_MouseKeyboardSchemeIndex = asset.FindControlSchemeIndex("Mouse-Keyboard");
            return asset.controlSchemes[m_MouseKeyboardSchemeIndex];
        }
    }
    private int m_GamePadSchemeIndex = -1;
    public InputControlScheme GamePadScheme
    {
        get
        {
            if (m_GamePadSchemeIndex == -1) m_GamePadSchemeIndex = asset.FindControlSchemeIndex("GamePad");
            return asset.controlSchemes[m_GamePadSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnFreeLook(InputAction.CallbackContext context);
        void OnRegularAttack(InputAction.CallbackContext context);
        void OnTransformAttack(InputAction.CallbackContext context);
        void OnDodge(InputAction.CallbackContext context);
        void OnTimeStop(InputAction.CallbackContext context);
        void OnHealthRecover(InputAction.CallbackContext context);
        void OnTarget(InputAction.CallbackContext context);
        void OnTargetSelection(InputAction.CallbackContext context);
        void OnSkillActionPanel(InputAction.CallbackContext context);
        void OnSkillAction(InputAction.CallbackContext context);
        void OnCallMenu(InputAction.CallbackContext context);
        void OnExecution(InputAction.CallbackContext context);
        void OnCheck(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnUpSelection(InputAction.CallbackContext context);
        void OnDownSelection(InputAction.CallbackContext context);
        void OnConfirm(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnLeftSelection(InputAction.CallbackContext context);
        void OnRightSelection(InputAction.CallbackContext context);
        void OnUICallMenu(InputAction.CallbackContext context);
        void OnCancelCheck(InputAction.CallbackContext context);
    }
    public interface ITitlePageActions
    {
        void OnAnyKeyTitlePage(InputAction.CallbackContext context);
    }
    public interface IAutoDriveActions
    {
        void OnSteer(InputAction.CallbackContext context);
        void OnAccelerate(InputAction.CallbackContext context);
        void OnBrake(InputAction.CallbackContext context);
        void OnHandBrake(InputAction.CallbackContext context);
    }
}
